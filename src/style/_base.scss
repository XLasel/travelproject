:root {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
}

button {
  border: 0;
  background: none;
  vertical-align: baseline;
  color: inherit;
  -webkit-appearance: none;
  appearance: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:focus {
  outline: 0;
}

a,
a:link,
a:visited {
  color: inherit;
}

h1 {
  @media (max-width: 576px) {
    font: map-get($h1-font, small);
    letter-spacing: $mobile-h1-font-letter-spacing;
  }

  @media (min-width: 576px) and (max-width: 768px) {
    font: map-get($h1-font, middle);
    letter-spacing: $mobile-h1-font-letter-spacing;
  }

  @media (min-width: 769px) {
    font: map-get($h1-font, large);
    letter-spacing: $h1-font-letter-spacing;
  }
}

h2 {
  @media (max-width: 768px) {
    font: map-get($h2-font, small);
    letter-spacing: $mobile-h2-font-letter-spacing;
  }

  @media (min-width: 769px) {
    font: map-get($h2-font, large);
  }
}

h3 {
  @media (max-width: 768px) {
    font: map-get($h3-font, small);
    letter-spacing: $mobile-h3-font-letter-spacing;
  }

  @media (min-width: 769px) {
    font: map-get($h3-font, large);
  }
}


%p-big {
  @media (max-width: 768px) {
    font: map-get($p-big, small);
  }

  @media (min-width: 769px) {
    font: map-get($p-big, large);
  }
}

%p-normal {
  @media (max-width: 768px) {
    font: map-get($p-normal, small);
  }

  @media (min-width: 769px) {
    font: map-get($p-normal, large);
  }
}

%p-small {
  @media (max-width: 768px) {
    font: map-get($p-small, small);
    letter-spacing: $mobile-p-small-letter-spacing;
  }

  @media (min-width: 769px) {
    font: map-get($p-small, large);
    letter-spacing: $p-small-letter-spacing;
  }
}

body {
  @extend %p-normal;

  color: $black;
  background: $beige100;
}

%link {
  color: $black;
  text-decoration: none;
  transition: all 0.3s ease;

  @media(any-hover: hover) {
    &:hover {
      text-decoration: underline;
    }

    &:active {
      color: $green400;
      text-decoration: underline;
    }
  }
}